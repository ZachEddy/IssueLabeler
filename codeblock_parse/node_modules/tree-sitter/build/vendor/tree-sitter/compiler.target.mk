# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := compiler
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=compiler' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/include/node \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/src \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/deps/uv/include \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/deps/v8/include \
	-I$(srcdir)/vendor/tree-sitter/include \
	-I$(srcdir)/vendor/tree-sitter/src \
	-I$(srcdir)/vendor/tree-sitter/externals/utf8proc \
	-I$(srcdir)/vendor/tree-sitter/externals/json-parser

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=compiler' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/include/node \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/src \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/deps/uv/include \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/deps/v8/include \
	-I$(srcdir)/vendor/tree-sitter/include \
	-I$(srcdir)/vendor/tree-sitter/src \
	-I$(srcdir)/vendor/tree-sitter/externals/utf8proc \
	-I$(srcdir)/vendor/tree-sitter/externals/json-parser

DEFS_Test := \
	'-DNODE_GYP_MODULE_NAME=compiler' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DTREE_SITTER_WRAP_MALLOC=true'

# Flags passed to all source files.
CFLAGS_Test := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Test := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Test := \
	-std=c++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-threadsafe-statics \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Test :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Test :=

INCS_Test := \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/include/node \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/src \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/deps/uv/include \
	-I/Users/zacharyeddy/.node-gyp/7.10.0/deps/v8/include \
	-I$(srcdir)/vendor/tree-sitter/include \
	-I$(srcdir)/vendor/tree-sitter/src \
	-I$(srcdir)/vendor/tree-sitter/externals/utf8proc \
	-I$(srcdir)/vendor/tree-sitter/externals/json-parser

OBJS := \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/build_parse_table.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/build_tables.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/lex_item.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/lex_item_transitions.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/lex_conflict_manager.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/lex_table_builder.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/lookahead_set.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/parse_item.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/parse_item_set_builder.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/build_tables/rule_can_be_blank.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/compile.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/generate_code/c_code.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/lex_table.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/parse_grammar.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/parse_table.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/precedence_range.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/expand_repeats.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/expand_tokens.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/extract_choices.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/extract_tokens.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/flatten_grammar.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/intern_symbols.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/normalize_rules.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/parse_regex.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/prepare_grammar.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/prepare_grammar/token_description.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/rule.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/rules/character_set.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/rules/choice.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/rules/metadata.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/rules/repeat.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/rules/seq.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/src/compiler/util/string_helpers.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/externals/utf8proc/utf8proc.o \
	$(obj).target/$(TARGET)/vendor/tree-sitter/externals/json-parser/json.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-g \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-g

LDFLAGS_Release := \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release :=

LDFLAGS_Test := \
	-g \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Test := \
	-g

LIBS :=

$(builddir)/compiler.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/compiler.a: LIBS := $(LIBS)
$(builddir)/compiler.a: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/compiler.a: TOOLSET := $(TOOLSET)
$(builddir)/compiler.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(builddir)/compiler.a
# Add target alias
.PHONY: compiler
compiler: $(builddir)/compiler.a

# Add target alias
.PHONY: compiler
compiler: $(builddir)/compiler.a

# Short alias for building this static library.
.PHONY: compiler.a
compiler.a: $(builddir)/compiler.a

